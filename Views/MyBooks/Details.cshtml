@model Books.Models.MyBooks

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<style>
    .fixed-size-image {
        width: 325px;
        height: 500px;
    }

    .custom-button {
        background-color: #009792;
        color: #ffffff;
        border: none;
    }

    .custom-button:hover {
        background-color: #007f70;
        color: #ffffff;
    }

    .custom-text {
        color: #009792;
    }
</style>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.FrontPage)
        </dt>
        <dd class="col-sm-10">
            <img src="@Url.Content(Model.Book.FrontPage)" class="fixed-size-image" />
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.YearPublished)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.YearPublished)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.NumPages)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.NumPages)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Publisher)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Publisher)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.DownloadUrl)
        </dt>
        <dd class="col-sm-10">
            <a href="@Model.Book.DownloadUrl" class="custom-text">@Model.Book.DownloadUrl</a>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Author)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Author.FullName)
        </dd>
        <dt class="col-sm-2">
            Genres
        </dt>
        <dd class="col-sm-10">
            @if (Model.Book.BookGenre != null)
            {
                @foreach (var genre in Model.Book.BookGenre)
                {
                    <a asp-controller="Genres" asp-action="Details" asp-route-id="@genre.GenreId" class="custom-text">
                        @genre.Genre.GenreName
                    </a>
                    <br />
                }
            }
        </dd>
        <dt class="col-sm-2">
            Reviews
        </dt>
        <dd class="col-sm-10">
            @if (Model.Book.Reviews != null && Model.Book.Reviews.Any())
            {
                foreach (var review in Model.Book.Reviews)
                {
                    <li>
                        <strong>@review.AppUser</strong> - @review.Comment (Rating: @review.Rating)
                    </li>
                }
            }
            else
            {
                <p>No reviews available.</p>
            }
        </dd>
    </dl>
</div>

@if (User.Identity.IsAuthenticated)
{
    <div>
        <h4>Add Review</h4>
        <form asp-controller="Reviews" asp-action="Create" method="post" id="reviewForm">
            <input type="hidden" name="BookID" value="@Model.Book.Id" />
            <input type="hidden" name="AppUser" id="AppUser" />
            <div class="form-group">
                <label for="Comment">Comment:</label>
                <textarea class="form-control" name="Comment" id="Comment"></textarea>
            </div>
            <div class="form-group">
                <label for="Rating">Rating:</label>
                <input type="number" class="form-control" name="Rating" id="Rating" min="1" max="5" />
            </div>
            <br />
            <button type="submit" class="btn btn-primary custom-button">Submit</button>
        </form>
    </div>
}
@section Scripts {
    <script>
        document.getElementById('reviewForm').addEventListener('submit', function (event) {
            var appUserField = document.getElementById('AppUser');
            var userName = '@User.Identity.Name';
            console.log("Current user name:", userName);
            appUserField.value = userName;
        });
    </script>
}

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id" class="custom-text">Edit</a> |
    <a asp-action="Index" class="custom-text">Back to List</a>
</div>
